syntax = "proto3";

package helloservice;
option go_package = "./helloservice";// 生成到当前目录

message String {
    string value = 1;
}

service HelloService {
    rpc Hello (String) returns (String);
}

//protoc --go_out=plugins=grpc:. hello.proto

/*
gRPC 插件会为服务端和客户端生成不同的接口：

type HelloServiceServer interface {
	Hello(context.Context, *String) (*String, error)
}

type HelloServiceClient interface {
	Hello(context.Context, *String, ...grpc.CallOption) (*String, error)
}

gRPC 通过 context.Context 参数，为每个方法调用提供了上下文支持。客户端在调用方法的时候，
可以通过可选的 grpc.CallOption 类型的参数提供额外的上下文信息。


*/